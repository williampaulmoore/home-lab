version: '3'

services:
  authentik:
    image: ghcr.io/goauthentik/server:2023.5.4
    container_name: authentik
    restart: always
    command: server
    networks:
      identity:
        ipv4_address: 172.20.2.2
    environment:
      - AUTHENTIK_POSTGRESQL__HOST=postgres
      - AUTHENTIK_POSTGRESQL__PORT=5432
      - AUTHENTIK_POSTGRESQL__NAME=${AUTHENTIK_PG_DATABASE}
      - AUTHENTIK_POSTGRESQL__USERNAME=${AUTHENTIK_PG_USERNAME}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_PG_PASSWORD}
      - AUTHENTIK_REDIS__HOST=redis
    volumes:
      - ${AUTHENTIK_SERVER_DATA_DIR}/data:/data
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  worker:
    image: ghcr.io/goauthentik/server:2023.5.4
    restart: always
    container_name: authentik-worker
    command: worker
    networks:
      identity:
        ipv4_address: 172.20.2.3
    environment:
      - AUTHENTIK_POSTGRESQL__HOST=postgres
      - AUTHENTIK_POSTGRESQL__PORT=5432
      - AUTHENTIK_POSTGRESQL__NAME=${AUTHENTIK_PG_DATABASE}
      - AUTHENTIK_POSTGRESQL__USERNAME=${AUTHENTIK_PG_USERNAME}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_PG_PASSWORD}
      - AUTHENTIK_REDIS__HOST=redis
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${AUTHENTIK_SERVER_DATA_DIR}/media:/media
      - ${AUTHENTIK_SERVER_DATA_DIR}/certs:/certs
      - ${AUTHENTIK_SERVER_DATA_DIR}/custom-templates:/templates
      - ${AUTHENTIK_SERVER_DATA_DIR}/data:/data
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  redis:
    image: docker.io/library/redis:alpine
    container_name: authentik-redis
    restart: always 
    command: --save 60 1 --loglevel warning
    networks:
      identity:
        ipv4_address: 172.20.2.20
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - ${AUTHENTIK_REDIS_DATA_DIR}:/data

  postgres:
    image: postgres:13
    container_name: authentik-postgres
    restart: always
    networks:
      identity:
        ipv4_address: 172.20.2.30
    environment:
      - POSTGRES_USER=authentik
      - POSTGRES_PASSWORD=authentik
      - POSTGRES_DB=authentik
    volumes:
      - ${AUTHENTIK_POSTGRES_DATA_DIR}:/var/lib/postgresql/data

networks:
  identity:
    external: true

